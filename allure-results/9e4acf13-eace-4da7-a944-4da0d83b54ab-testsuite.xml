<?xml version='1.0'?>
<ns2:test-suite xmlns:ns2='urn:model.allure.qatools.yandex.ru' start='1590579047724' stop='1590579049267'>
    <name>Employee Database Tests</name>
    <title>Employee Database Tests</title>
    <test-cases>
        <test-case start='1590579047744' status='failed' stop='1590579049265'>
            <name>Get Employee and Validate response</name>
            <title>Get Employee and Validate response</title>
            <labels>
                <label name='language' value='javascript'/>
                <label name='framework' value='wdio'/>
                <label name='thread' value='0-0'/>
            </labels>
            <parameters>
                <parameter kind='argument' name='browser' value='Chrome Headless-10.0.17763'/>
            </parameters>
            <steps>
                <step start='1590579047753' status='passed' stop='1590579048634'>
                    <name>Given I Call PostEmployee Endpoint</name>
                    <title>Given I Call PostEmployee Endpoint</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1590579048634' status='passed' stop='1590579048635'>
                    <name>Then I Verify EmployeeID is Generated and Present in response body</name>
                    <title>Then I Verify EmployeeID is Generated and Present in response body</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1590579048635' status='passed' stop='1590579049257'>
                    <name>When I Call PutEmployee Endpoint</name>
                    <title>When I Call PutEmployee Endpoint</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1590579049257' status='passed' stop='1590579049258'>
                    <name>Then I Verify Status Code is "200"</name>
                    <title>Then I Verify Status Code is "200"</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1590579049258' status='passed' stop='1590579049258'>
                    <name>Then I Verify Status is "success"</name>
                    <title>Then I Verify Status is "success"</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1590579049258' status='failed' stop='1590579049265'>
                    <name>Then I Validate JSON Schema for "PutEmployee" Endpoint for "200" Response</name>
                    <title>Then I Validate JSON Schema for "PutEmployee" Endpoint for "200" Response</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1590579049265' status='canceled' stop='1590579049266'>
                    <name>Then I Verify EmployeeID Present in response body is correct</name>
                    <title>Then I Verify EmployeeID Present in response body is correct</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1590579049266' status='canceled' stop='1590579049266'>
                    <name>Then I Verify Employee Details in response body is correct</name>
                    <title>Then I Verify Employee Details in response body is correct</title>
                    <attachments/>
                    <steps/>
                </step>
            </steps>
            <attachments/>
            <failure>
                <message>expected value to match json-schema '{"type":"object","properties":...' -> '{"status":"success","data":nul...'
                      Invalid type: null (expected object)
                          schema: {"type":"object","properties":{"status":{"type":"string"},"d...
                          rule:   /properties/data/type -> "object"
                          field:  /data -> null: null</message>
                <stack-trace>AssertionError: expected value to match json-schema '{"type":"object","properties":...' -> '{"status":"success","data":nul...'
                      Invalid type: null (expected object)
                          schema: {"type":"object","properties":{"status":{"type":"string"},"d...
                          rule:   /properties/data/type -> "object"
                          field:  /data -> null: null
                    at World.&lt;anonymous> (C:\Users\CPANDITH\Desktop\GFK\AutomationTest\API\Steps\/Common_Steps.js:28:30)
                    at World.executeAsync (C:\Users\CPANDITH\Desktop\GFK\AutomationTest\node_modules\@wdio\utils\build\shim.js:123:21)
                    at World.testFrameworkFnWrapper (C:\Users\CPANDITH\Desktop\GFK\AutomationTest\node_modules\@wdio\utils\build\test-framework\testFnWrapper.js:49:28)</stack-trace>
            </failure>
        </test-case>
    </test-cases>
</ns2:test-suite>